/* src/css/Register.css - MODIFIED FOR DARK THEME */

.register-container {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 64px); /* Full height minus header if applicable */
    background-color: var(--bg-color-dark); /* Main dark background */
    padding: 2rem 1rem; /* Add padding for responsiveness */
    box-sizing: border-box; /* Ensure padding is included in element's total width and height */
}

.register-card {
    background-color: var(--bg-color-medium); /* Dark card background */
    padding: 2rem;
    border-radius: var(--border-radius-md); /* Medium border radius */
    box-shadow: 0 4px 12px rgba(0,0,0,0.3); /* Darker shadow */
    width: 100%;
    max-width: 450px; /* Slightly wider for register form */
    text-align: center;
    color: var(--text-color-light); /* Light text color */
}

.register-title {
    font-size: 2rem;
    margin-bottom: 1.5rem;
    color: var(--text-color-light); /* Light text color for title */
    font-weight: bold;
}

.register-form {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* Spacing between form elements */
}

.form-group {
    text-align: left; /* Align labels to the left */
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    color: var(--text-color-medium); /* Muted light text for labels */
    font-weight: 500;
}

.register-form input[type="email"],
.register-form input[type="password"],
.register-form input[type="text"],
.register-dropdown { /* Add specific types if needed */
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--border-color-light); /* Lighter dark border */
    border-radius: var(--border-radius-sm); /* Small border radius */
    background-color: var(--bg-color-light); /* Lighter dark background for inputs */
    color: var(--text-color-light); /* Light text in inputs */
    font-size: 1rem;
    transition: var(--transition);
    /* --- IMPORTANT: ENSURE FIXED HEIGHT FOR INPUTS --- */
    height: 2.5rem; /* Standard height for inputs, consistent with buttons */
    box-sizing: border-box; /* Include padding in height */
}

.register-form input:focus,
.register-dropdown:focus {
    border-color: var(--primary-color); /* Primary color on focus */
    outline: none;
    box-shadow: 0 0 0 2px rgba(88, 101, 242, 0.3); /* Subtle focus glow */
}

.register-dropdown {
    -webkit-appearance: none; /* Remove default dropdown arrow for custom styling */
    -moz-appearance: none;
    appearance: none;
    cursor: pointer;
    background-image: url('data:image/svg+xml;utf8,<svg fill="%23dcddde" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg"><path d="M7 10l5 5 5-5z"/><path d="M0 0h24v24H0z" fill="none"/></svg>'); /* Custom arrow */
    background-repeat: no-repeat;
    background-position: right 0.75rem center;
    background-size: 1.5em;
}

/* Base button style (assuming .btn-primary is applied to your main buttons) */
.btn-primary {
    background-color: var(--primary-color); /* Primary color for buttons */
    color: var(--text-color-light); /* White text */
    padding: 0.75rem 1.2rem;
    border: none;
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    font-weight: 600;
    transition: var(--transition);
    width: 100%;
    /* --- CRITICAL: Make buttons flex containers with fixed height to prevent shifting --- */
    display: flex;
    align-items: center; /* Center content vertically */
    justify-content: center; /* Center content horizontally */
    height: 2.5rem; /* FIXED HEIGHT to prevent layout shifts */
    box-sizing: border-box; /* Include padding in total height */
}

.btn-primary:hover {
    background-color: var(--secondary-color); /* Secondary color on hover */
}

.redirect-login {
    margin-top: 1.5rem;
    font-size: 0.9rem;
    color: var(--text-color-medium); /* Muted light text */
}

.redirect-login a {
    color: var(--text-color-link); /* Bright link color */
    text-decoration: none;
    font-weight: 600;
}

.redirect-login a:hover {
    text-decoration: underline;
    color: var(--primary-color); /* Primary color on hover */
}

/* Specific styles for OTP related elements */
.otp-input-container {
    display: flex;
    justify-content: center;
    gap: 0.5rem;
    margin-bottom: 1rem;
}

.otp-input {
    width: 3rem; /* Fixed width for OTP boxes */
    height: 3rem; /* Fixed height for OTP boxes */
    text-align: center;
    font-size: 1.5rem;
    border: 1px solid var(--border-color-light);
    border-radius: var(--border-radius-sm);
    background-color: var(--bg-color-light);
    color: var(--text-color-light);
    transition: border-color var(--transition), box-shadow var(--transition);
    box-sizing: border-box; /* Include padding in height */
}

.otp-input:focus {
    border-color: var(--primary-color);
    box-shadow: 0 0 0 2px rgba(88, 101, 242, 0.3);
}

.otp-button {
    background-color: var(--secondary-color); /* A different accent for OTP button */
    color: var(--text-color-light);
    padding: 0.6rem 1rem;
    border: none;
    border-radius: var(--border-radius-sm);
    cursor: pointer;
    font-size: 0.9rem;
    font-weight: 600;
    transition: background-color var(--transition);
    /* CRITICAL: Make this button a flex container with fixed height too */
    display: flex;
    align-items: center; /* Center content vertically */
    justify-content: center; /* Center content horizontally */
    height: 2.5rem; /* FIXED HEIGHT for the button */
    box-sizing: border-box; /* Include padding in total height */
}

.otp-button:hover {
    background-color: var(--primary-color);
}

.otp-timer {
    font-size: 0.85rem;
    color: var(--text-color-dark); /* Darker muted text for timer */
    margin-top: 0.5rem;
}

.otp-error, .register-error {
    color: var(--accent-color); /* Error red */
    font-size: 0.875rem;
    margin-top: 0.5rem;
    text-align: center;
}

/* Passkey toggle button styling (if used) */
.passkey-toggle-btn {
    background: none;
    border: none;
    color: var(--text-color-link); /* Link color for the passkey toggle */
    cursor: pointer;
    font-size: 0.9rem;
    margin-top: 1rem;
    transition: color var(--transition);
}

.passkey-toggle-btn:hover {
    color: var(--primary-color);
    text-decoration: underline;
}

/* --- THE SINGLE DEFINITION FOR .spinner AND .button-spinner --- */

/* This is the general spinner style, exactly as you provided for 'galaxy vibe' */
.spinner {
    width: 1em; /* Your requested size */
    height: 1em; /* Your requested size */
    border: 0.1em solid rgba(255, 255, 255, 0.4); /* Your requested border style */
    border-top: 0.1em solid #ffffff; /* Your requested border-top color */
    border-radius: 50%;
    animation: rotate 1.2s linear infinite; /* Your requested animation */
    /* Ensure no extra margins by default, especially in flex containers */
    margin: 0;
    flex-shrink: 0; /* Prevents it from shrinking if space is tight */
}

/* This is the container for the spinner when used inside a button */
/* It ensures the spinner is perfectly centered within the button's fixed height */
.button-spinner {
    display: flex;
    align-items: center; /* Center vertically */
    justify-content: center; /* Center horizontally */
    height: 100%; /* Make this container fill the button's height */
    width: 100%; /* Make this container fill the button's width */
    padding: 0; /* Remove any internal padding */
    margin: 0; /* Remove any internal margin */
}

/* The loading text. This element might not appear in a button, but defined for consistency. */
.loading-text {
    font-size: 0.8rem;
    color: #555;
    font-style: normal;
    font-weight: 400;
    margin-top: 0.5rem; /* This is for full-page spinners, not button spinners */
}

/* Your requested keyframe animation */
@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}


/* Responsive adjustments */
@media (max-width: 480px) {
    .register-card {
        padding: 1.5rem;
        border-radius: var(--border-radius-sm);
    }
    .register-title {
        font-size: 1.75rem;
    }
}